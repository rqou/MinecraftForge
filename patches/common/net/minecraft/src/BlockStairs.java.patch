--- ../src_base/common/net/minecraft/src/BlockStairs.java
+++ ../src_work/common/net/minecraft/src/BlockStairs.java
@@ -4,6 +4,8 @@
 import cpw.mods.fml.common.asm.SideOnly;
 import java.util.List;
 import java.util.Random;
+
+import net.minecraftforge.common.ForgeDirection;
 
 public class BlockStairs extends Block
 {
@@ -401,4 +403,117 @@
 
         return var23;
     }
+    
+    @Override
+    public boolean rotateY(World world, int x, int y, int z, int amount)
+    {
+        int oldMeta = world.getBlockMetadata(x, y, z);
+        int upsideDown = (oldMeta & 4) >> 2;
+        int direction = oldMeta & 3;
+        boolean rotateNeg = amount < 0;
+        amount = Math.abs(amount) % 4;
+        if(rotateNeg)
+            amount = 4 - amount;
+        ForgeDirection dir = ForgeDirection.getOrientation(5 - oldMeta);
+        for(int i = 0; i < amount; i++)
+            dir = dir.getRotCcwY();
+        world.setBlockMetadataWithNotify(x, y, z, (5 - dir.ordinal()) | (upsideDown << 2));
+        return true;
+    }
+    
+    @Override
+    public boolean rotateX(World world, int x, int y, int z, int amount)
+    {
+        int oldMeta = world.getBlockMetadata(x, y, z);
+        int upsideDown = (oldMeta & 4) >> 2;
+        int direction = oldMeta & 3;
+        if(direction == 2 || direction == 3)
+        {
+            if(amount % 2 != 0)
+                return false;
+            
+            if(upsideDown == 0)
+                upsideDown = 1;
+            else if(upsideDown == 1)
+                upsideDown = 0;
+            world.setBlockMetadataWithNotify(x, y, z, direction | (upsideDown << 2));
+            return true;
+        }
+        else
+        {
+            boolean rotateNeg = amount < 0;
+            amount = Math.abs(amount) % 4;
+            if(rotateNeg)
+                amount = 4 - amount;
+            for(int i = 0; i < amount; i++)
+            {
+                if(direction == 1 && upsideDown == 0)
+                {
+                    direction = 0;
+                }
+                else if(direction == 0 && upsideDown == 0)
+                {
+                    upsideDown = 1;
+                }
+                else if(direction == 0 && upsideDown == 1)
+                {
+                    direction = 1;
+                }
+                else if(direction == 1 && upsideDown == 1)
+                {
+                    upsideDown = 0;
+                }
+            }
+            world.setBlockMetadataWithNotify(x, y, z, direction | (upsideDown << 2));
+            return true;
+        }
+    }
+    
+    @Override
+    public boolean rotateZ(World world, int x, int y, int z, int amount)
+    {
+        int oldMeta = world.getBlockMetadata(x, y, z);
+        int upsideDown = (oldMeta & 4) >> 2;
+        int direction = oldMeta & 3;
+        if(direction == 0 || direction == 1)
+        {
+            if(amount % 2 != 0)
+                return false;
+            
+            if(upsideDown == 0)
+                upsideDown = 1;
+            else if(upsideDown == 1)
+                upsideDown = 0;
+            world.setBlockMetadataWithNotify(x, y, z, direction | (upsideDown << 2));
+            return true;
+        }
+        else
+        {
+            boolean rotateNeg = amount < 0;
+            amount = Math.abs(amount) % 4;
+            if(rotateNeg)
+                amount = 4 - amount;
+            for(int i = 0; i < amount; i++)
+            {
+                if(direction == 2 && upsideDown == 0)
+                {
+                    upsideDown = 1;
+                }
+                else if(direction == 2 && upsideDown == 1)
+                {
+                    direction = 3;
+                }
+                else if(direction == 3 && upsideDown == 1)
+                {
+                    upsideDown = 0;
+                }
+                else if(direction == 3 && upsideDown == 0)
+                {
+                    direction = 2;
+                }
+            }
+            world.setBlockMetadataWithNotify(x, y, z, direction | (upsideDown << 2));
+            return true;
+        }
+    }
 }
